% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/overlap_functions.R
\name{overlap_functions}
\alias{overlap_combine}
\alias{overlap_functions}
\alias{priority_overlap}
\title{WCCMH admission functions}
\usage{
overlap_combine(data, group_cols, start_col, end_col, overlap_int = 1L,
  analysis_date = Sys.Date())

priority_overlap(data, group_cols, priority_col, priority_value, start_col,
  end_col, overlap_int = 1L, analysis_date = Sys.Date() + 999)
}
\arguments{
\item{data}{A data.table object with collapsable records.}

\item{group_cols}{A group of columns which will collectively make a key on
which to group by when reducing/collapsing the data.table object.}

\item{start_col}{The start date for record. Blanks not allowed.}

\item{end_col}{The end date for the record. Blanks will be replaced, see}

\item{overlap_int}{An integer, default value of 1, to find consecutive
records.}

\item{analysis_date}{If end_col has missing values, they will be replaced
with this value. Defaults to Sys.Date().}

\item{priority_col}{A single column which will have a priority assignment.}

\item{priority_value}{An integer column, where lower priorities override
higher priorities. May be numeric if coerceable to integer.}
}
\value{
overlap_combine returns a reduced/collapsed data.table object based
on group_cols.
priority_overlap returns a data.table with fixed records based on priority
team assignment. May contain more rows than original dataset.
}
\description{
These functions are for datasets that have integer or date
columns that need to be combined by some unique grouping or with the
additional constraint of a priority column when the priority column causes
an overlap outside of the unique grouping but within the priority column.
}
\note{
Do not have data columns named strdt, enddt, pk_1, pk_2, ... You have
been warned!
}
\examples{
#'
# how to fix if priorities are not to be accounted for...
test1 <- overlap_combine(data = copy(ex_overlap), group_cols = c("case_no",
"team"), start_col = "start_date", end_col = "end_date",
 overlap_int = 1L, analysis_date = Sys.Date() + 1e3)#'
print(test1)

 # how to fix if priorities are to be accounted for...
test2 <- priority_overlap(data = copy(ex_overlap),
                 group_cols = c("case_no", "type"),
                 priority_col = "team",
                 priority_value = "priority",
                 start_col = "start_date",
                 end_col = "end_date",
                 overlap_int = 1L,
                 analysis_date = Sys.Date())
print(test2)

}

