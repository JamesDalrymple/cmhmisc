% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interval_cut.R
\name{interval_cut}
\alias{interval_cut}
\title{cut with point-by-point closure}
\usage{
interval_cut(vec, guide_dt, closure, category, interval_names, type = "R")
}
\arguments{
\item{vec}{the vector to be categorized}

\item{guide_dt}{a data.table object with three required columns:
  see interval names (2 cols) and category (1 col). Other columns will not
be used}

\item{closure}{is the argument closed in Intervals_full, and needs to match
a vector or matrix of TRUE/FALSE options, see interval::Intervals_full for
more information.}

\item{category}{is the unique category in guide_dt per combination of
interval_names. Duplicates are not permitted.}

\item{interval_names}{are the start/end columns of the interval which is used to
categorize points.}

\item{type}{Can be 'R" or "Z" for real numbers and integers, respectively. Feeds
type in interval::Intervals_full.}
}
\value{
a vector of the same length as vec and of the categories found in
guide_dt (attributes will be preserved).
}
\description{
a function to categorize data points based on distinct
non-overlapping intervals. This function is analagous to cut, except it is
for situations where all of the points do not share closure on the
right/left side of a given interval. If cut can be used, it should; cut is
faster in such situations.
}
\note{
Reino says there is a faster way. data.table::foverlaps is a
potential consideration.
}
\examples{
chol_guide <- data.table(init = c(0, 200, 240), end = c(200, 240, Inf),
                         cat = c("best", "borderline", "poor"))
test_chol_dt <- data.table(chol = sample(150:400, size = 20, replace = TRUE))
interval_cut(vec = test_chol_dt[, chol],
   guide_dt = chol_guide,
   closure = c(TRUE, FALSE,
               TRUE, TRUE,
               FALSE, FALSE),
   category = "cat",
   interval_names = c("init", "end"),
   type = "R")

test_chol_dt[, chol_cat := interval_cut(vec = chol,
                                        guide_dt = chol_guide,
                                        closure = c(TRUE, FALSE,
                                                    TRUE, TRUE,
                                                    FALSE, FALSE),
                                        category = "cat",
                                        interval_names = c("init", "end"),
                                        type = "R")]
print(test_chol_dt)
vec = c(189, 300, 240, 201, 241, 89, 175, 199, 200)
guide_dt = chol_guide
closure = c(TRUE, FALSE,
            TRUE, TRUE,
            FALSE, FALSE)
category = "cat"
interval_names = c("init", "end")
type = "R"

 interval_cut(vec, guide_dt, closure, category,
   interval_names, type = "R")

}

